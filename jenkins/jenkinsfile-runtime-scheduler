pipeline {
    agent { label "dpperf" }
    // Scheduled to run at 19:00 UTC every Saturday
    triggers {
        cron('0 19 * * 6')
    }
    stages {
        stage('Trigger Downstream Job') {
            steps {
                script {
                    def values = [10, 25, 50, 75, 120, 170, 220]
                    for (int i = 0; i < values.size(); i++) {
                        def currentValue = values[i]

                        // Calculate and print remaining values
                        def remainingValues = values.drop(i + 1)
                        echo "Remaining tests to run: ${remainingValues}"

                        echo "Triggering downstream job - Run #${i + 1} with value=${currentValue}"
                        try {
                            // Trigger Downstream job
                            def result = build(
                                job: 'platform-jar/DataPlane/dp-performance/jmeter-runner',
                                wait: true,
                                parameters: [
                                    string(name: 'envBaseurl', value: 'canv2-dpperf-groundsnaplexmedium-fm.snaplogicdev.io'),
                                    string(name: 'Version', value: '4.39.1'),
                                    string(name: 'TestPlan', value: 'RTTChildToGrandChild.jmx'),
                                    string(name: 'Threads', value: currentValue.toString())
                                ]
                            )
                            echo "Downstream job - Run #${i + 1} completed successfully with result: ${result.getResult()}."
                        } catch (Exception e) {
                            // Handle failure of the downstream job
                            echo "Error: Downstream job - Run #${i + 1} failed with error: ${e.getMessage()}."
                            // Set current build to unstable
                            currentBuild.result = 'UNSTABLE'
                        }
                        // Sleep for 5 minutes before the next trigger
                        if (i < values.size() - 1) {
                            echo "Chill time for 5 minutes before the next run"
                            sleep(time: 300, unit: 'SECONDS')
                        }
                    }
                }
            }
        }
    }
    post {
        always {
            echo "Downstream job trigger stage completed"
        }
        unstable {
            echo "Build is unstable due to downstream job failures"
        }
    }
}